services:
  # spring-boot-backend:
  #   build: .
  #   container_name: spring-boot-backend
  #   mem_limit: 512m
  #   networks:
  #     - beancart-net
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     # Database configuration
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/beancartdb
  #     - SPRING_DATASOURCE_USERNAME=postgres
  #     - SPRING_DATASOURCE_PASSWORD=postgres
  #     - SPRING_JPA_HIBERNATE_DDL_AUTO=none
  #     - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      
  #     # Disable Spring Security auto-configuration
  #     - SPRING_AUTOCONFIGURE_EXCLUDE=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      
  #     # Server configuration
  #     - SERVER_PORT=8000
      
  #     # Flyway migration configuration
  #     - SPRING_FLYWAY_ENABLED=true
  #     - SPRING_FLYWAY_BASELINE_ON_MIGRATION=true
  #     - SPRING_FLYWAY_LOCATIONS=classpath:db/migration
  #     - SPRING_FLYWAY_CLEAN_DISABLED=false
  #     - SPRING_FLYWAY_CLEAN_ON_VALIDATION_ERROR=true
      
  #     # JPA configuration
  #     - SPRING_DATA_JPA_REPOSITORIES_ENABLED=true
      
  #     # Redis configuration
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  
      
  #     # Feature flags
  #     - FEATURE_PAYMENT_PROCESSING=true
  #     - FEATURE_NEW_USER_ONBOARDING=false
      
  #     # Logging
  #     - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=INFO
  #     - LOGGING_LEVEL_COM_YOURCOMPANY=DEBUG
      
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   volumes:
  #     - maven-cache:/workspace/app/.m2  # Mount volume for Maven dependencies

  db:
    image: postgres:15-alpine
    container_name: beancart-db
    mem_limit: 256m
    networks:
      - beancart-net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: beancartdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: beancart-redis
    mem_limit: 128m
    networks:
      - beancart-net
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  beancart-net:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  # maven-cache:  # Define the volume for Maven cache